<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!-- Расположение файла пропертей, в котором описаны параметры подключения к БД -->
    <!-- property-placeholder указывает где нужно искать файл пропертей  -->
    <context:property-placeholder location="classpath:util.properties"/>

    <!-- Описание бина dataSource. Этот бин необходим для создания подключения к БД -->
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="${jdbc.hsqldb.driverClass}" />
        <beans:property name="url" value="${jdbc.hsqldb.url}" />
        <beans:property name="username" value="${jdbc.hsqldb.username}" />
        <beans:property name="password" value="${jdbc.hsqldb.password}" />
    </beans:bean>

    <!-- Инициализация втроекнной базы дынны при старте приложения. -->
    <jdbc:initialize-database>
        <!-- Создание схемы данных -->
        <jdbc:script location="classpath:dbschema.sql"/>
        <!-- Зполнение схемы тестовыми данными -->
        <jdbc:script location="classpath:test-data.sql"/>
    </jdbc:initialize-database>


    <!-- JPA Persistence Context and EntityManager configuration -->
    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!-- packagesToScan - расположение пакета с классами-сущностями -->
        <beans:property name="packagesToScan" value="ru.suprun.springstudyapp.mvc.bean"/>

        <!--
                Важный момент!
                Для корректной работы нужно  использовать ref, а не value для передачи ссылки на уже объявленные бины.
                Почему??? Потому что value передает строку (и в результате получите исключение), а ref - передает ссылку на объект.
         -->
        <beans:property name="dataSource" ref="dataSource"/>

        <beans:property name="jpaVendorAdapter">
            <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <beans:property name="generateDdl" value="true"/>
                <beans:property name="showSql" value="true"/>
            </beans:bean>
        </beans:property>

        <beans:property name="jpaProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.format_sql">false</beans:prop>
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
            </beans:props>
        </beans:property>

    </beans:bean>


    <!-- Automatic Transaction Participation -->
    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
    </beans:bean>


    <!-- Java mail configuration -->
    <!-- Здесь задается логин и пароль от почтого сервера (или конкретной почты) -->
    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="username" value="${java.mail.username}"/>
        <beans:property name="password" value="${java.mail.password}"/>
        <beans:property name="port" value="465"/>
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.required">true</beans:prop>
                <beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop>
                <beans:prop key="mail.smpt.host">${java.mail.host}</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <!-- Бин для процессинга шаблонов почты -->
    <beans:bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <beans:property name="resourceLoaderPath" value="/WEB-INF/email-templates/" />
    </beans:bean>

</beans:beans>